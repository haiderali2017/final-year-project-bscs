# Generated by Django 3.0.2 on 2020-02-24 06:17

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import users.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Applicant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone', models.CharField(blank=True, max_length=55, null=True)),
                ('company_name', models.CharField(blank=True, max_length=55, null=True)),
                ('title', models.CharField(blank=True, max_length=55, null=True)),
                ('position', models.CharField(blank=True, max_length=55, null=True)),
                ('place', models.CharField(blank=True, max_length=55, null=True)),
                ('country', models.CharField(blank=True, max_length=55, null=True)),
                ('business', models.CharField(blank=True, max_length=55, null=True)),
                ('employee', models.CharField(blank=True, max_length=55, null=True)),
                ('street', models.CharField(blank=True, max_length=55, null=True)),
                ('additional', models.CharField(blank=True, max_length=55, null=True)),
                ('zip', models.CharField(blank=True, max_length=55, null=True)),
                ('code', models.CharField(blank=True, max_length=55, null=True)),
                ('is_company', models.BooleanField(default=False)),
                ('location', models.CharField(blank=True, max_length=100, null=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'Applicant',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='company_profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('number_of_employee', models.CharField(blank=True, max_length=100, null=True)),
                ('company_address', models.CharField(blank=True, max_length=255, null=True)),
                ('company_contact', models.CharField(blank=True, max_length=100, null=True)),
                ('company_tag_name', models.CharField(blank=True, max_length=100, null=True)),
                ('company_bio', models.CharField(blank=True, max_length=100, null=True)),
                ('profile_picture', models.FileField(blank=True, null=True, upload_to='pictures/')),
                ('company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'company_profile',
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='photos/%Y/%m/%d', validators=[users.validators.validate_file_extension])),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Job_Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Job_title', models.CharField(max_length=100)),
                ('job_designation', models.CharField(max_length=255)),
                ('Job_Description', models.CharField(max_length=100)),
                ('qualification_required', models.CharField(blank=True, max_length=100, null=True)),
                ('positions', models.CharField(max_length=100)),
                ('experience_required', models.CharField(max_length=100)),
                ('City', models.CharField(blank=True, max_length=100, null=True)),
                ('Country', models.CharField(max_length=100)),
                ('complete_address', models.CharField(max_length=100)),
                ('Region', models.CharField(max_length=100)),
                ('gender_preference', models.CharField(max_length=100)),
                ('job_nature', models.CharField(max_length=100)),
                ('status', models.BooleanField(default=False)),
                ('posted_at', models.DateTimeField(auto_now_add=True)),
                ('posted_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.company_profile')),
            ],
            options={
                'db_table': 'Job_Post',
            },
        ),
        migrations.CreateModel(
            name='Resume',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resume_summary', models.CharField(blank=True, max_length=255)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('applicantID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Resume_Skills',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skill_names', models.CharField(blank=True, max_length=255)),
                ('resumeID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Resume')),
            ],
        ),
        migrations.CreateModel(
            name='Resume_Experience',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255)),
                ('start', models.CharField(blank=True, max_length=255)),
                ('end', models.CharField(blank=True, max_length=255)),
                ('resumeID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Resume')),
            ],
        ),
        migrations.CreateModel(
            name='Resume_Education',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255)),
                ('institute_name', models.CharField(blank=True, max_length=255)),
                ('start', models.CharField(blank=True, max_length=255)),
                ('end', models.CharField(blank=True, max_length=255)),
                ('resumeID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Resume')),
            ],
        ),
        migrations.CreateModel(
            name='Resume_Activities',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255)),
                ('description', models.CharField(blank=True, max_length=255)),
                ('resumeID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Resume')),
            ],
        ),
        migrations.CreateModel(
            name='Job_Skill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=15)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Job_Post')),
            ],
        ),
        migrations.CreateModel(
            name='AppliedJobs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('PD', 'Pending'), ('AC', 'Accepted'), ('RJ', 'Rejected')], default='PD', max_length=2)),
                ('applicant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Job_Post')),
                ('resume', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Document')),
            ],
        ),
    ]
